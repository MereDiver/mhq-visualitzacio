---
title: "Salut mental al món: una exploració visual interactiva a partir del Global Mind Project"
author: "Adrià Comet Martínez"
format: 
  html:
    theme: flatly
    toc: true
    toc-location: left
    toc-depth: 2
    number-sections: true
    fig-align: center
    css: styles.css
    self-contained: true
editor: visual
---

![Indicador del MHQ](scale-image1-min-2048x420.png)

Aquest [estudi](https://mental.jmir.org/2020/7/e17935/) forma part del [Global Mind Project](https://sapienlabs.org/global-mind-project), una iniciativa per mesurar la salut mental global mitjançant l'indicador **MHQ** (Mental Health Quotient).

```{r, message=FALSE, warning=FALSE}
#| echo: false
library(tidyverse)
library(lubridate)
library(janitor)
```

```{r, message=FALSE, warning=FALSE}
#| echo: false
df <- read_csv("gmp_data.csv") %>%
  clean_names() %>%
  rename_with(~ str_replace_all(., "\\.+", "_"))
```

```{r, message=FALSE, warning=FALSE}
#| echo: false
# Conversió de dates i columnes rellevants
df <- df %>%
  mutate(
    start_date_utc = ymd_hms(start_date_utc),
    submit_date_utc = ymd_hms(submit_date_utc),
    year = year(start_date_utc)
  )

```

## Mapa interactiu del benestar mental global

```{r, message=FALSE, warning=FALSE}
#| echo: false
library(dplyr)
library(leaflet)
library(countrycode)
library(maps)
library(scales)

# 1. Càlcul del MHQ mitjà per país i homogeneïtzació de noms
mhq_country <- df %>%
  group_by(country) %>%
  summarise(mean_mhq = mean(overall_mhq, na.rm = TRUE)) %>%
  mutate(country = recode(country,
                          "United States" = "USA",
                          "United Kingdom" = "UK"))

# 2. Obtenció de coordenades (megaciutat per país)
data(world.cities)
coords <- world.cities %>%
  group_by(country.etc) %>%
  top_n(1, pop) %>%
  summarise(country = country.etc,
            latitude = lat,
            longitude = long)

# 3. Unió de dades i càlcul del radi
# Escalar amb més contrast (potència per exagerar diferències)
mhq_country_coords <- mhq_country %>%
  left_join(coords, by = "country") %>%
  mutate(
    scaled_radius = rescale(mean_mhq, to = c(1, 6))^1.8,
    opacity = rescale(mean_mhq, to = c(0.2, 1))^1.5
  )


# 4. Renderitzat del mapa
# Crear una paleta de colors segons el MHQ
pal <- colorNumeric(palette = "Greens", domain = mhq_country_coords$mean_mhq)

leaflet(mhq_country_coords) %>%
  addTiles() %>%
  addCircleMarkers(
    lng = ~longitude, lat = ~latitude,
    radius = ~scaled_radius,
    color = ~pal(mean_mhq), stroke = FALSE, fillOpacity = ~opacity,
    popup = ~paste0("<b>", country, "</b><br>MHQ mitjà: ", round(mean_mhq, 1))
  ) %>%
  addLegend(
    "bottomright", pal = pal, values = ~mean_mhq,
    title = "MHQ mitjà per país",
    labFormat = labelFormat(suffix = ""),
    opacity = 1
  )


```

## Evolució temporal del benestar mitjà global

```{r, message=FALSE, warning=FALSE}
#| echo: false
library(ggplot2)
library(plotly)
library(dplyr)
library(lubridate)
library(stringr)

invisible(Sys.setlocale("LC_TIME", "ca_ES.UTF-8"))

df_plot <- df %>%
  mutate(date = as.Date(start_date_utc)) %>%
  group_by(month = floor_date(date, "month")) %>%
  summarise(mean_mhq = mean(overall_mhq, na.rm = TRUE)) %>%
  mutate(
    raw_month_name = format(month, "%B"),
    clean_month_name = str_to_sentence(str_remove(raw_month_name, "^d['’]|^de ")),
    hover_text = paste0("MHQ: ", round(mean_mhq, 1),
                        "<br>Mes: ", clean_month_name, " de ", format(month, "%Y"))
  )

p <- ggplot(df_plot, aes(x = month, y = mean_mhq)) +
  geom_line(color = "#2c7fb8") +
  geom_point(aes(text = hover_text), color = "#2c7fb8") +
  labs(title = "Evolució del MHQ global per mesos", x = "Mes", y = "MHQ mitjà") +
  coord_cartesian(ylim = c(50, 90)) +
  theme_minimal()

ggplotly(p, tooltip = "text")

```

## Distribució del MHQ segons gènere i edat (ridgeplot)

```{r, message=FALSE, warning=FALSE}
#| echo: false
library(ggridges)

# Crear grups d'edat
df <- df %>%
  mutate(biological_sex = recode(biological_sex,
                                 "Femmina" = "Dona",
                                 "Female" = "Dona",
                                 "Male" = "Home")) %>%  # reassignació
  filter(biological_sex %in% c("Home", "Dona"), 
         !is.na(age), 
         !is.na(overall_mhq)) %>%
  mutate(
    age_group = case_when(
      age < 18 ~ "<18",
      age <= 24 ~ "18–24",
      age <= 34 ~ "25–34",
      age <= 44 ~ "35–44",
      age <= 54 ~ "45–54",
      age <= 64 ~ "55–64",
      age <= 74 ~ "65–74",
      age <= 84 ~ "75–84",
      age >= 85 ~ "85+"
    ),
    age_group = factor(age_group, levels = c("<18", "18–24", "25–34", "35–44",
                                             "45–54", "55–64", "65–74", "75–84", "85+"))
  )

# Crear gràfic
ggplot(df, aes(x = overall_mhq, y = age_group, fill = biological_sex)) +
  geom_density_ridges(alpha = 0.7, scale = 1.2) +
  scale_fill_manual(values = c("Home" = "#1f78b4", "Dona" = "#e31a1c")) +
  labs(title = "Distribució del MHQ per edat i gènere", x = "MHQ", y = "Grup d’edat") +
  theme_ridges() +
  theme(legend.title = element_blank())



```

## Radar chart de dimensions del MHQ

```{r, message=FALSE, warning=FALSE}
#| echo: false
library(fmsb)
library(dplyr)

# Crear dades
radar_data <- df %>%
  group_by(biological_sex) %>%
  summarise(across(ends_with("_dimension"), ~ mean(.x, na.rm = TRUE))) %>%
  as.data.frame()

# Assignar noms i ajustar límits
rownames(radar_data) <- radar_data$biological_sex
radar_data$biological_sex <- NULL

# Reordenem columnes
radar_data <- radar_data[, c("drive_motivation_dimension", 
                             "cognition_dimension", 
                             "adaptability_resilence_dimension", 
                             "mood_outlook_dimension", 
                             "social_self_dimension", 
                             "mind_body_connection_dimension")]

# Afegim màxim i mínim
radar_data <- rbind(rep(100, 6), rep(60, 6), radar_data)

# Noms més curts
colnames(radar_data) <- c("Motivació", "Cognició", "Resiliència", 
                          "Emocions", "Relacions", "Cos-Ment")

# Grafiquem radar chart
radarchart(radar_data,
           axistype = 1,
           pcol = c("#1f78b4", "#e31a1c"), 
           plwd = 2,
           plty = 1,
           cglcol = "grey80", 
           cglty = 1,
           axislabcol = "grey30",
           caxislabels = seq(60, 100, 10),
           vlcex = 0.9,
           title = "")

# Títol separat
title("Perfil mitjà del MHQ per sexe \n (escala real -100 a 200)", cex.main = 1.4, font.main = 1)

# Afegim llegenda
legend("bottomright",
       legend = c("Dona", "Home"),
       col = c("#1f78b4", "#e31a1c"),
       lty = 1,
       lwd = 2,
       bty = "n",
       cex = 0.9)

```

## Barplot interactiu d'hàbits saludables vs MHQ

```{r, message=FALSE, warning=FALSE}
#| echo: false
#| results: 'asis'

df %>%
  mutate(frequency_of_doing_exercise = ifelse(frequency_of_doing_exercise %in% c("Rarely/Never", "Rarely/never"),"Rarely/Never", frequency_of_doing_exercise)
         ) %>% 
  group_by(frequency_of_doing_exercise) %>%
  summarise(mean_mhq = mean(overall_mhq, na.rm = TRUE)) %>%
  mutate(
    mean_mhq_round = round(mean_mhq, 2),
    frec_cat = case_when(
      frequency_of_doing_exercise == "Rarely/Never" ~ "Rarament/Mai",
      frequency_of_doing_exercise == "Less than once a week" ~ "Menys d'un cop per setmana",
      frequency_of_doing_exercise == "Once a week" ~ "Un cop per setmana",
      frequency_of_doing_exercise == "Few days a week" ~ "Alguns dies per setmana",
      frequency_of_doing_exercise == "Every day" ~ "Cada dia",
      TRUE ~ frequency_of_doing_exercise
    )
  ) %>%
  arrange(desc(mean_mhq)) %>%
  mutate(frec_cat = factor(frec_cat, levels = frec_cat)) %>%
  plot_ly(
    x = ~frec_cat,
    y = ~mean_mhq_round,
    type = 'bar',
    hoverinfo = 'x+y',
    marker = list(color = 'rgba(255,127,14,0.8)')
  ) %>%
  layout(
    title = "MHQ segons freqüència d’exercici",
    xaxis = list(title = "Freqüència d’exercici"),
    yaxis = list(title = "MHQ mitjà")
  )


```

## Boxplot interactivament filtrable per educació i ocupació

```{r, message=FALSE, warning=FALSE}
#| echo: false
#| results: 'asis'

# Recodificació manual
df <- df %>%
  mutate(education_grouped = case_when(
    education %in% c("Primary Education") ~ "Educació Primària",
    education %in% c("Some High School", "High School", "Vocational certification") ~ "Educació Secundària",
    education %in% c("Bachelor’s Degree", "Master’s Degree", "PhD", "Associate’s Degree", "M.D.", "J.D.") ~ "Educació Superior",
    education %in% c("Prefer not to say") ~ "Prefereix no dir-ho",
    TRUE ~ "Altres"
  ),
  employment_grouped = case_when(
    employment %in% c("Company employee", "Non-profit/Government employee") ~ "Ocupat",
    employment %in% c("Self-employed", "Employed /Self employed", "Business owner", "Casual worker") ~ "Autònom o Similar",
    employment %in% c("Studying") ~ "Estudiant",
    employment %in% c("Unemployed") ~ "Desocupat",
    employment %in% c("Retired") ~ "Jubilat",
    employment %in% c("Not able to work") ~ "Altres",
    TRUE ~ "Altres"
  ))

# Creació del boxplot
p <- ggplot(df, aes(x = education_grouped, y = overall_mhq, fill = employment_grouped)) +
  geom_boxplot(outlier.size = 0.8, alpha = 0.8) +
  coord_flip() +
  labs(title = "MHQ segons nivell educatiu i situació laboral",
       x = "Nivell educatiu",
       y = "MHQ",
       fill = "Situació laboral") +
  theme_minimal()

# Gràfic interactiu amb Plotly
ggplotly(p)


```

## Treemap de diferències per diagnòstics clínics

```{r, message=FALSE, warning=FALSE}
#| echo: false
#| results: 'asis'

library(treemap)

# Separar diagnòstics i agrupar categories
treemap_data <- df %>%
  filter(!is.na(archived_diagnosed_mental_health_disorders)) %>%
  separate_rows(archived_diagnosed_mental_health_disorders, sep = "\\|") %>%
  mutate(archived_diagnosed_mental_health_disorders = trimws(archived_diagnosed_mental_health_disorders)) %>%
  filter(archived_diagnosed_mental_health_disorders != "") %>%
  mutate(
    diagnosi_cat = case_when(
      archived_diagnosed_mental_health_disorders %in% c(
        "No", 
        "No I do not currently have a diagnosis of any of these mental health disorders"
      ) ~ "Sense diagnòstic clínic",
      archived_diagnosed_mental_health_disorders == "Prefer not to say." ~ "Prefereixo no dir-ho",
      archived_diagnosed_mental_health_disorders == "I currently have a diagnosis of a different mental health disorder that isn’t listed here." ~ "Altres trastorns no llistats",
      archived_diagnosed_mental_health_disorders %in% c("drugs gambling)", "Substance use Disorder/Addiction (e.g. to alcohol") ~ "Trastorns per addicció",
      archived_diagnosed_mental_health_disorders %in% c("bulimia)", "Eating disorder (e.g. anorexia") ~ "Trastorns de conducta alimentària",
      archived_diagnosed_mental_health_disorders == "Depression" ~ "Depressió",
      archived_diagnosed_mental_health_disorders == "Bipolar disorder" ~ "Trastorn bipolar",
      archived_diagnosed_mental_health_disorders == "Obsessive compulsive disorder (OCD)" ~ "TOC",
      archived_diagnosed_mental_health_disorders == "Autism spectrum disorder (ASD)" ~ "Trastorn de l’espectre autista",
      archived_diagnosed_mental_health_disorders == "Post-traumatic stress disorder (PTSD)" ~ "Estrès post-traumàtic (TEPT)",
      archived_diagnosed_mental_health_disorders == "Generalized Anxiety" ~ "Ansietat generalitzada",
      archived_diagnosed_mental_health_disorders == "Schizophrenia/psychosis" ~ "Esquizofrènia o psicosi",
      archived_diagnosed_mental_health_disorders == "Attention Deficit-hyperactivity disorder (ADHD)" ~ "TDAH",
      archived_diagnosed_mental_health_disorders == "Psoriasis" ~ "Psoriasi",
      TRUE ~ archived_diagnosed_mental_health_disorders
    )
  ) %>%
  group_by(diagnosi_cat) %>%
  summarise(
    mean_mhq = mean(overall_mhq, na.rm = TRUE),
    count = n()
  ) %>%
  filter(count > 50) %>%
  mutate(vSize = mean_mhq + 100)

# Treemap final
treemap(
  treemap_data,
  index = "diagnosi_cat",
  vSize = "vSize",
  vColor = "mean_mhq",
  type = "value",
  palette = "RdYlGn",  # ara els valors baixos = vermell
  title = "MHQ mitjà segons diagnòstic clínic individual",
  title.legend = "MHQ mitjà"
)

```

## Heatmap d’associacions entre hàbits i dimensions

```{r, message=FALSE, warning=FALSE}
#| echo: false
#| results: 'asis'

library(corrplot)

df <- df %>%
  mutate(
    frequency_of_doing_exercise = recode(frequency_of_doing_exercise,
                                         "Rarely/never" = "Rarely/Never"),
    frequency_of_socializing = recode(frequency_of_socializing,
                                      "Rarely/never" = "Rarely/Never")
  )

# Codificació manual per a cada variable ordinal
df$frequency_of_doing_exercise <- factor(df$frequency_of_doing_exercise,
  levels = c("Rarely/Never", "Less than once a week", "Once a week", "Few days a week", "Every day"),
  ordered = TRUE
)

df$frequency_of_getting_a_good_nights_sleep <- factor(df$frequency_of_getting_a_good_nights_sleep,
  levels = c("Hardly ever", "Some of the time", "Most of the time", "All of the time"),
  ordered = TRUE
)

df$frequency_of_socializing <- factor(df$frequency_of_socializing,
  levels = c("Rarely/Never", "1-3 times a month", "Once a week", "Several days a week"),
  ordered = TRUE
)

# Calcular matriu de correlacions
cor_matrix <- df %>%
  select(contains("dimension"), 
         frequency_of_doing_exercise,
         frequency_of_getting_a_good_nights_sleep,
         frequency_of_socializing) %>%
  mutate(across(everything(), ~ as.numeric(.))) %>%
  cor(use = "pairwise.complete.obs")

# Etiquetes més clares
colnames(cor_matrix) <- c("Cognició", "Adaptabilitat", "Motivació", "Ànim", "Social", "Ment-Cos", 
                          "Exercici", "Descans", "Socialització")
rownames(cor_matrix) <- colnames(cor_matrix)

# Generar gràfic més clar
corrplot(cor_matrix, method = "color", type = "upper",
         tl.col = "black", tl.cex = 0.9, tl.srt = 45, number.cex = 0.7,
         addCoef.col = "white", mar = c(1,1,2,1))

mtext("Correlacions entre hàbits i dimensions del MHQ", side = 3, line = 2.5, cex = 1.2, font = 2)

```
